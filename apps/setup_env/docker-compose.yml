version: '2'
services:
  base-alpine:
    tty: true
    build: ./base-alpine
    image: base-alpine
    container_name: base-alpine
    command: /bin/sh
  openssl:
    tty: true
    build: ./openssl
    image: openssl
    container_name: openssl
    command: /bin/sh
    volumes:
      - ./openssl/output:/output
      - ./openssl/script:/script
  tomcat6:
    tty: true
    build: ./tomcat6
    image: tomcat6
    container_name: tomcat6
    command: /bin/sh
  tomcat6-java6:
    tty: true
    build: ./tomcat6-java6
    image: tomcat6-java6
    container_name: tomcat6-java6
    command: /bin/sh
  glassfish2:
    tty: true
    build: ./glassfish2
    image: glassfish2
    container_name: glassfish2
    ports:
      - "8080:8080"
      - "8181:8181"
      - "4848:4848"
    command: /bin/sh
  glassfish3:
    tty: true
    build: ./glassfish3
    image: glassfish3
    container_name: glassfish3
    ports:
      - "8048:8080"
      - "8148:8181"
      - "4848:4848"
    volumes:
      - /rsync/glassfish:/scripts
    environment:
      VIRTUAL_HOST: local.co.jp
      VIRTUAL_PORT: 8181
    command: /scripts/init.sh
  java8:
    tty: true
    build: ./java8
    image: java8
    container_name: java8
    command: /bin/sh
  spring-boot:
    tty: true
    build:
      context: ./spring-boot
      args:
        MAVEN_VERSION: 3.5.0
    image: spring-boot
    container_name: spring-boot
    command: /bin/sh
  build-server:
    tty: true
    build:
      context: ./build-server
      args:
        MAVEN_VERSION: 3.5.0
    image: build-server
    container_name: build-server
    volumes:
      - /m2:/root/.m2
      - /workspace:/workspace
      - ./build-server/build-scripts:/build-scripts
    command: /bin/sh
  smtp:
    image: schickling/mailcatcher
    container_name: smtp
    ports:
      - "1080:1080"
      - "1025:1025"
  nginx-proxy:
    tty: true
    build: ./nginx-proxy
    image: nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/certs:/etc/nginx/certs
    restart: always
networks:
  default:
    external:
      name: common_link